# Generated by Django 4.1.2 on 2022-11-03 11:51

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('pkid', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email address')),
                ('phone', models.CharField(max_length=20, unique=True, verbose_name='Phone Number')),
                ('avatar', models.ImageField(null=True, upload_to='whatsappclone/avatars/')),
                ('theme', models.CharField(choices=[('LIGHT', 'LIGHT'), ('DARK', 'DARK'), ('SYSTEM_DEFAULT', 'SYSTEM_DEFAULT')], max_length=100, null=True)),
                ('wallpaper', models.ImageField(null=True, upload_to='whatsappclone/wallpapers/')),
                ('status', models.CharField(default="Hey There! I'm using Whatsapp Web Clone V1!", max_length=300)),
                ('last_seen', models.CharField(choices=[('EVERYONE', 'EVERYONE'), ('MY CONTACTS', 'MY CONTACTS'), ('NOBODY', 'NOBODY')], default='EVERYONE', max_length=100)),
                ('avatar_status', models.CharField(choices=[('EVERYONE', 'EVERYONE'), ('MY CONTACTS', 'MY CONTACTS'), ('NOBODY', 'NOBODY')], default='EVERYONE', max_length=100)),
                ('about_status', models.CharField(choices=[('EVERYONE', 'EVERYONE'), ('MY CONTACTS', 'MY CONTACTS'), ('NOBODY', 'NOBODY')], default='EVERYONE', max_length=100)),
                ('group_status', models.CharField(choices=[('EVERYONE', 'EVERYONE'), ('MY CONTACTS', 'MY CONTACTS'), ('NOBODY', 'NOBODY')], default='EVERYONE', max_length=100)),
                ('message_timer', models.CharField(choices=[('24 HOURS', '24 HOURS'), ('7 DAYS', '7 DAYS'), ('90 DAYS', '90 DAYS'), ('OFF', 'OFF')], default='OFF', max_length=100)),
                ('read_receipts', models.BooleanField(default=True)),
                ('blocked_contacts', models.IntegerField(default='0')),
                ('message_notifications', models.BooleanField(default=True)),
                ('show_previews', models.BooleanField(default=True)),
                ('show_reaction_notifications', models.BooleanField(default=True)),
                ('sounds', models.BooleanField(default=True)),
                ('security_notifications', models.BooleanField(default=True)),
                ('terms_agreement', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Timezone',
            fields=[
                ('pkid', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
            ],
            options={
                'verbose_name': 'group',
                'verbose_name_plural': 'groups',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='BlockedContact',
            fields=[
                ('pkid', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('blockee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blockee_blocked_contacts', to=settings.AUTH_USER_MODEL)),
                ('blocker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blocker_blocked_contacts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='tz',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.timezone', verbose_name='Timezone'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddConstraint(
            model_name='blockedcontact',
            constraint=models.UniqueConstraint(fields=('blocker', 'blockee'), name='unique_blocker_blockee'),
        ),
    ]
